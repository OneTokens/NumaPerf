--- old	2020-09-10 15:37:36.004213265 -0400
+++ new	2020-09-10 15:37:27.671447238 -0400
@@ -12,6 +12,9 @@
 #include <math.h>
 #include <string.h>
 
+#define MODIFICATION 1
+
+
 #ifdef ENABLE_PARSEC_HOOKS
 #include <hooks.h>
 #endif
@@ -243,10 +246,29 @@ DWORD WINAPI bs_thread(LPVOID tid_ptr){
 #else
 int bs_thread(void *tid_ptr) {
 #endif
+
     int i, j;
     fptype price;
     fptype priceDelta;
     int tid = *(int *)tid_ptr;
+
+#ifdef MODIFICATION
+    int thread_id;
+    if(tid < 20) {
+        thread_id = tid*2;
+    } else {
+        thread_id = tid*2-1;
+    }
+    cpu_set_t mask;
+    CPU_ZERO(&mask);
+    CPU_SET(thread_id, &mask);
+    if (sched_setaffinity(0, sizeof(mask), &mask) == -1)
+    {
+        fprintf(stderr, "warning: could not set CPU affinity\n");
+        abort();
+    }
+#endif
+
     int start = tid * (numOptions / nThreads);
     int end = start + (numOptions / nThreads);
 
@@ -257,15 +279,22 @@ int bs_thread(void *tid_ptr) {
 #else  //ENABLE_OPENMP
         for (i=start; i<end; i++) {
 #endif //ENABLE_OPENMP
-            /* Calling main function to calculate option value based on 
+            /* Calling main function to calculate option value based on
              * Black & Sholes's equation.
              */
+#ifdef MODIFICATION
+            price = BlkSchlsEqEuroNoDiv( sptprice[i*5], strike[i*5],
+                                         rate[i*5], volatility[i*5], otime[i*5],
+                                         otype[i], 0);
+#else
             price = BlkSchlsEqEuroNoDiv( sptprice[i], strike[i],
-                                         rate[i], volatility[i], otime[i], 
+                                         rate[i], volatility[i], otime[i],
                                          otype[i], 0);
+
+#endif
             prices[i] = price;
-            
-#ifdef ERR_CHK   
+
+#ifdef ERR_CHK
             priceDelta = data[i].DGrefval - price;
             if( fabs(priceDelta) >= 1e-4 ){
                 printf("Error on %d. Computed=%.5f, Ref=%.5f, Delta=%.5f\n",
@@ -371,6 +400,27 @@ int main (int argc, char **argv)
 #define PAD 256
 #define LINESIZE 64
 
+
+#ifdef MODIFICATION
+    buffer = (fptype *) malloc(5 * numOptions * sizeof(fptype) + PAD);
+    sptprice = (fptype *) (((unsigned long long)buffer + PAD) & ~(LINESIZE - 1));
+    strike = sptprice + 1;
+    rate = sptprice + 1;
+    volatility = rate + 1;
+    otime = volatility + 1;
+
+    buffer2 = (int *) malloc(numOptions * sizeof(fptype) + PAD);
+    otype = (int *) (((unsigned long long)buffer2 + PAD) & ~(LINESIZE - 1));
+
+    for (i=0; i<numOptions; i++) {
+        otype[i]            = (data[i].OptionType == 'P') ? 1 : 0;
+        *(sptprice+i*5)       = data[i].s;
+        *(sptprice+i*5+1)     = data[i].strike;
+        *(sptprice+i*5+2)      = data[i].r;
+        *(sptprice+i*5+3)      = data[i].v;
+        *(sptprice+i*5+4)      = data[i].t;
+    }
+#else
     buffer = (fptype *) malloc(5 * numOptions * sizeof(fptype) + PAD);
     sptprice = (fptype *) (((unsigned long long)buffer + PAD) & ~(LINESIZE - 1));
     strike = sptprice + numOptions;
@@ -386,10 +436,10 @@ int main (int argc, char **argv)
         sptprice[i]   = data[i].s;
         strike[i]     = data[i].strike;
         rate[i]       = data[i].r;
-        volatility[i] = data[i].v;    
+        volatility[i] = data[i].v;
         otime[i]      = data[i].t;
     }
-
+#endif
     printf("Size of data: %d\n", numOptions * (sizeof(OptionData) + sizeof(int)));
 
 #ifdef ENABLE_PARSEC_HOOKS
